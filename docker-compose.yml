services:
  share-web:
    container_name: share-web
    build:
      context: .
      dockerfile: ./apps/share-web/Dockerfile
    restart: always
    ports:
      - 4000:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - DEBUG=true
      - STATIC_ENABLED=true
      - STATIC_RULES=
        *,^/trpc/(.*),http://share-api:4001/trpc/$1;
        *,^/storage/(.*),http://share-api:4001/storage/$1;
    depends_on:
      - share-api

  share-api:
    container_name: share-api
    build:
      context: .
      dockerfile: ./apps/share-api/Dockerfile
    restart: always
    environment:
      - STORAGE_PATH=/mnt/images
      - CACHE_PATH=/mnt/cache
      - REDDIS_HOST=redis
      - REDDIS_PORT=6379
      - DATABASE_URL=postgresql://postgres:devpass@db:5432/postgres?schema=public
    volumes:
      - cache-thumbnails:/mnt/cache/thumbnails
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      prisma-migrate:
          condition: service_completed_successfully


  prisma-migrate:
    container_name: prisma-migrate
    build:
      context: .
      dockerfile: ./packages/database/Dockerfile
    restart: "no"
    environment:
      - DATABASE_URL=postgresql://postgres:devpass@db:5432/postgres?schema=public
    depends_on:
      - db

  db:
    container_name: db
    image: cgr.dev/chainguard/postgres:15
    restart: always
    environment:
      - POSTGRES_PASSWORD=devpass
    volumes:
      - db-data:/var/lib/postgresql/data

  redis:
    container_name: redis
    image: cgr.dev/chainguard/redis:7
    restart: always

volumes:
  db-data: {}
  cache-thumbnails: {}
